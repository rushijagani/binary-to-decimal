{"version":3,"sources":["assets/images/svg/facebook.svg","assets/images/svg/github.svg","assets/images/svg/instagram.svg","assets/images/svg/linkedin.svg","assets/images/svg/twitter.svg","assets/images/svg/wordpress.svg","assets/images/svg/mail.svg","container/Header/index.js","helper/index.js","component/Converter/index.js","container/Footer/index.js","component/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","toDecimal","number","result","i","Math","pow","floor","Converter","useState","binary","setBinary","decimal","setDecimal","binaryError","setBinaryError","numberError","setNumberError","onSubmit","event","preventDefault","type","placeholder","onChange","e","binaryValue","target","value","isNaN","test","decimalValue","toBinary","disabled","index","href","rel","src","github","alt","twitter","linkedin","facebook","instagram","wordpress","mail","App","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1ead0fd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facebook.422e7665.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.a112a001.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.91a8e68d.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.89dcd695.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.88c38bdc.svg\";","module.exports = __webpack_public_path__ + \"static/media/wordpress.4dab8248.svg\";","module.exports = __webpack_public_path__ + \"static/media/mail.bfe8a6b5.svg\";","import React from 'react';\r\n\r\nimport './header.scss';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__container\">\r\n                <h2> Binary To Decimal  | Decimal To Binary</h2>\r\n                <span>Converter</span>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","export const toBinary = (number) => {\r\n\r\n    let result = 0;\r\n    let i = 0;\r\n  \r\n    /*\r\n        Loop through the number by dividing it by 2 until we reach 1 or below\r\n    */\r\n    while(number >= 1) {\r\n      let reminder = number % 2;\r\n      if (reminder) {\r\n        /* \r\n      If the reminder is 1 we add it to the power of 10 to get the \r\n      place value. ie. 100, 1000 ... \r\n        */\r\n        result += Math.pow(10, i);\r\n      }\r\n      /* \r\n      Increment the i value\r\n      Reduce the number by dividing it by 2\r\n      */\r\n      i++;\r\n      number = Math.floor(number / 2);\r\n    }\r\n  \r\n    return result;\r\n}\r\n\r\n\r\nexport const toDecimal = (number) => {\r\n\r\n    let result = 0;\r\n    let i = 0;\r\n  \r\n    /*\r\n       Loop through the number by dividing it by 10 until we reach 0 or below\r\n    */\r\n    while(number > 0) {\r\n      let reminder = number % 10;\r\n      if (reminder) {\r\n        /* \r\n            Get the last digit of the binary number and if it is 1,\r\n            then add it to the result by 2 to the power of the i.\r\n        */\r\n        result += Math.pow(2, i);\r\n      }\r\n      /*\r\n         Increment the i in every iteration.\r\n         reduce the number by 10.\r\n      */\r\n      i++;\r\n      number = Math.floor(number / 10);\r\n    }\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport { toBinary, toDecimal } from './../../helper';\r\n\r\nimport './converter.scss';\r\n\r\nconst Converter = () => {\r\n    const [binary, setBinary] = useState('');\r\n    const [decimal, setDecimal] = useState('');\r\n    const [binaryError, setBinaryError] = useState(false);\r\n    const [numberError, setNumberError] = useState(false);\r\n\r\n    const handleBinaryChange = (e) => {\r\n        const binaryValue = e.target.value;\r\n        setNumberError(false);\r\n        if(isNaN(binaryValue)) {\r\n            setNumberError(true);\r\n            return;\r\n        }\r\n        setBinaryError(!(/^[0-1]+$/g).test(binaryValue) && (binaryValue !== '') );\r\n        if(binaryValue !== '') {\r\n            setBinary(binaryValue);\r\n            setDecimal(toDecimal(binaryValue)); \r\n        } else {\r\n            setBinary('');\r\n            setDecimal('');\r\n        }\r\n    }\r\n\r\n    const handleDecimalChange = (e) => {\r\n        const decimalValue = e.target.value;\r\n        setNumberError(false);\r\n        if(isNaN(decimalValue)) {\r\n            setNumberError(true);\r\n            return;\r\n        }\r\n        if(decimalValue !== '') {\r\n            setDecimal(decimalValue);\r\n            setBinary(toBinary(decimalValue));\r\n        } else {\r\n            setDecimal('');\r\n            setBinary('');\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setDecimal(toDecimal(binary));\r\n    }\r\n\r\n    let binaryErrorMessage = \"Enter only Binary value (either 0 or 1)\";\r\n    let numberErrorMessage = \"Enter only Numbers\";\r\n\r\n    return (\r\n        <div className=\"converter\">\r\n            <form onSubmit={handleSubmit}>\r\n                \r\n                <input type=\"text\" placeholder=\"Binary\" onChange={handleBinaryChange} value={binary} />\r\n                {/* <input type=\"submit\" value=\"Convert\" disabled={binaryError} /> */}\r\n                <input type=\"text\" placeholder=\"Decimal\" onChange={handleDecimalChange} value={ binaryError ? '' : decimal} disabled={binaryError}/>\r\n                <span className={`error-msg ${binaryError || numberError ? 'fadeIn' : '' } `}>\r\n                    { binaryError &&\r\n                        binaryErrorMessage\r\n                    }\r\n                    { numberError &&\r\n                        numberErrorMessage\r\n                    }\r\n                </span>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Converter;\r\n","import React from 'react';\r\nimport facebook from './../../assets/images/svg/facebook.svg';\r\nimport github from './../../assets/images/svg/github.svg';\r\nimport instagram from './../../assets/images/svg/instagram.svg';\r\nimport linkedin from './../../assets/images/svg/linkedin.svg';\r\nimport twitter from './../../assets/images/svg/twitter.svg';\r\nimport wordpress from './../../assets/images/svg/wordpress.svg';\r\nimport mail from './../../assets/images/svg/mail.svg';\r\n\r\nimport './footer.scss';\r\n\r\nconst index = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div>\r\n                <h4>Follow Me</h4>\r\n                <a href=\"https://github.com/rushijagani\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={github} alt=\"github\"/>\r\n                </a>\r\n                <a href=\"https://twitter.com/rushijagani_rj\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={twitter} alt=\"twitter\"/>\r\n                </a>\r\n                <a href=\"https://www.linkedin.com/in/rushi-jagani-99a37241/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={linkedin} alt=\"linkedin\"/>\r\n                </a>\r\n                <a href=\"https://www.facebook.com/rushi.jagani\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={facebook} alt=\"facebook\"/>\r\n                </a>\r\n                <a href=\"https://www.instagram.com/rushi.jagani.rj/?hl=en\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={instagram} alt=\"instagram\"/>\r\n                </a>\r\n                <a href=\"https://rushijagani.wordpress.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={wordpress} alt=\"wordpress\"/>\r\n                </a>\r\n                <a href=\"mailto:rushi.jagani@ymail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={mail} alt=\"mail\"/>\r\n                </a>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\nexport default index;\r\n","import React from 'react';\nimport Header from '../container/Header';\nimport Converter from './Converter';\nimport Footer from '../container/Footer';\nimport './main.scss';\n\nfunction App() {\n  return (\n    <>\n    <Header />\n    <Converter />\n    <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}